// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: app_specifics.proto

#ifndef PROTOBUF_app_5fspecifics_2eproto__INCLUDED
#define PROTOBUF_app_5fspecifics_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "extension_specifics.pb.h"
// @@protoc_insertion_point(includes)
#include "sync/base/sync_export.h"

namespace sync_pb {

// Internal implementation detail -- do not call these.
void SYNC_EXPORT protobuf_AddDesc_app_5fspecifics_2eproto();
void protobuf_AssignDesc_app_5fspecifics_2eproto();
void protobuf_ShutdownFile_app_5fspecifics_2eproto();

class AppNotificationSettings;
class AppSpecifics;

enum AppSpecifics_LaunchType {
  AppSpecifics_LaunchType_PINNED = 0,
  AppSpecifics_LaunchType_REGULAR = 1,
  AppSpecifics_LaunchType_FULLSCREEN = 2,
  AppSpecifics_LaunchType_WINDOW = 3
};
SYNC_EXPORT bool AppSpecifics_LaunchType_IsValid(int value);
const AppSpecifics_LaunchType AppSpecifics_LaunchType_LaunchType_MIN = AppSpecifics_LaunchType_PINNED;
const AppSpecifics_LaunchType AppSpecifics_LaunchType_LaunchType_MAX = AppSpecifics_LaunchType_WINDOW;
const int AppSpecifics_LaunchType_LaunchType_ARRAYSIZE = AppSpecifics_LaunchType_LaunchType_MAX + 1;

// ===================================================================

class SYNC_EXPORT AppNotificationSettings : public ::google::protobuf::MessageLite {
 public:
  AppNotificationSettings();
  virtual ~AppNotificationSettings();

  AppNotificationSettings(const AppNotificationSettings& from);

  inline AppNotificationSettings& operator=(const AppNotificationSettings& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const AppNotificationSettings& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const AppNotificationSettings* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(AppNotificationSettings* other);

  // implements Message ----------------------------------------------

  AppNotificationSettings* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const AppNotificationSettings& from);
  void MergeFrom(const AppNotificationSettings& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool initial_setup_done = 1;
  inline bool has_initial_setup_done() const;
  inline void clear_initial_setup_done();
  static const int kInitialSetupDoneFieldNumber = 1;
  inline bool initial_setup_done() const;
  inline void set_initial_setup_done(bool value);

  // optional bool disabled = 2;
  inline bool has_disabled() const;
  inline void clear_disabled();
  static const int kDisabledFieldNumber = 2;
  inline bool disabled() const;
  inline void set_disabled(bool value);

  // optional string oauth_client_id = 3;
  inline bool has_oauth_client_id() const;
  inline void clear_oauth_client_id();
  static const int kOauthClientIdFieldNumber = 3;
  inline const ::std::string& oauth_client_id() const;
  inline void set_oauth_client_id(const ::std::string& value);
  inline void set_oauth_client_id(const char* value);
  inline void set_oauth_client_id(const char* value, size_t size);
  inline ::std::string* mutable_oauth_client_id();
  inline ::std::string* release_oauth_client_id();
  inline void set_allocated_oauth_client_id(::std::string* oauth_client_id);

  // @@protoc_insertion_point(class_scope:sync_pb.AppNotificationSettings)
 private:
  inline void set_has_initial_setup_done();
  inline void clear_has_initial_setup_done();
  inline void set_has_disabled();
  inline void clear_has_disabled();
  inline void set_has_oauth_client_id();
  inline void clear_has_oauth_client_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* oauth_client_id_;
  bool initial_setup_done_;
  bool disabled_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void SYNC_EXPORT protobuf_AddDesc_app_5fspecifics_2eproto_impl();
  #else
  friend void SYNC_EXPORT protobuf_AddDesc_app_5fspecifics_2eproto();
  #endif
  friend void protobuf_AssignDesc_app_5fspecifics_2eproto();
  friend void protobuf_ShutdownFile_app_5fspecifics_2eproto();

  void InitAsDefaultInstance();
  static AppNotificationSettings* default_instance_;
};
// -------------------------------------------------------------------

class SYNC_EXPORT AppSpecifics : public ::google::protobuf::MessageLite {
 public:
  AppSpecifics();
  virtual ~AppSpecifics();

  AppSpecifics(const AppSpecifics& from);

  inline AppSpecifics& operator=(const AppSpecifics& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const AppSpecifics& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const AppSpecifics* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(AppSpecifics* other);

  // implements Message ----------------------------------------------

  AppSpecifics* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const AppSpecifics& from);
  void MergeFrom(const AppSpecifics& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  typedef AppSpecifics_LaunchType LaunchType;
  static const LaunchType PINNED = AppSpecifics_LaunchType_PINNED;
  static const LaunchType REGULAR = AppSpecifics_LaunchType_REGULAR;
  static const LaunchType FULLSCREEN = AppSpecifics_LaunchType_FULLSCREEN;
  static const LaunchType WINDOW = AppSpecifics_LaunchType_WINDOW;
  static inline bool LaunchType_IsValid(int value) {
    return AppSpecifics_LaunchType_IsValid(value);
  }
  static const LaunchType LaunchType_MIN =
    AppSpecifics_LaunchType_LaunchType_MIN;
  static const LaunchType LaunchType_MAX =
    AppSpecifics_LaunchType_LaunchType_MAX;
  static const int LaunchType_ARRAYSIZE =
    AppSpecifics_LaunchType_LaunchType_ARRAYSIZE;

  // accessors -------------------------------------------------------

  // optional .sync_pb.ExtensionSpecifics extension = 1;
  inline bool has_extension() const;
  inline void clear_extension();
  static const int kExtensionFieldNumber = 1;
  inline const ::sync_pb::ExtensionSpecifics& extension() const;
  inline ::sync_pb::ExtensionSpecifics* mutable_extension();
  inline ::sync_pb::ExtensionSpecifics* release_extension();
  inline void set_allocated_extension(::sync_pb::ExtensionSpecifics* extension);

  // optional .sync_pb.AppNotificationSettings notification_settings = 2;
  inline bool has_notification_settings() const;
  inline void clear_notification_settings();
  static const int kNotificationSettingsFieldNumber = 2;
  inline const ::sync_pb::AppNotificationSettings& notification_settings() const;
  inline ::sync_pb::AppNotificationSettings* mutable_notification_settings();
  inline ::sync_pb::AppNotificationSettings* release_notification_settings();
  inline void set_allocated_notification_settings(::sync_pb::AppNotificationSettings* notification_settings);

  // optional string app_launch_ordinal = 3;
  inline bool has_app_launch_ordinal() const;
  inline void clear_app_launch_ordinal();
  static const int kAppLaunchOrdinalFieldNumber = 3;
  inline const ::std::string& app_launch_ordinal() const;
  inline void set_app_launch_ordinal(const ::std::string& value);
  inline void set_app_launch_ordinal(const char* value);
  inline void set_app_launch_ordinal(const char* value, size_t size);
  inline ::std::string* mutable_app_launch_ordinal();
  inline ::std::string* release_app_launch_ordinal();
  inline void set_allocated_app_launch_ordinal(::std::string* app_launch_ordinal);

  // optional string page_ordinal = 4;
  inline bool has_page_ordinal() const;
  inline void clear_page_ordinal();
  static const int kPageOrdinalFieldNumber = 4;
  inline const ::std::string& page_ordinal() const;
  inline void set_page_ordinal(const ::std::string& value);
  inline void set_page_ordinal(const char* value);
  inline void set_page_ordinal(const char* value, size_t size);
  inline ::std::string* mutable_page_ordinal();
  inline ::std::string* release_page_ordinal();
  inline void set_allocated_page_ordinal(::std::string* page_ordinal);

  // optional .sync_pb.AppSpecifics.LaunchType launch_type = 5;
  inline bool has_launch_type() const;
  inline void clear_launch_type();
  static const int kLaunchTypeFieldNumber = 5;
  inline ::sync_pb::AppSpecifics_LaunchType launch_type() const;
  inline void set_launch_type(::sync_pb::AppSpecifics_LaunchType value);

  // @@protoc_insertion_point(class_scope:sync_pb.AppSpecifics)
 private:
  inline void set_has_extension();
  inline void clear_has_extension();
  inline void set_has_notification_settings();
  inline void clear_has_notification_settings();
  inline void set_has_app_launch_ordinal();
  inline void clear_has_app_launch_ordinal();
  inline void set_has_page_ordinal();
  inline void clear_has_page_ordinal();
  inline void set_has_launch_type();
  inline void clear_has_launch_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::sync_pb::ExtensionSpecifics* extension_;
  ::sync_pb::AppNotificationSettings* notification_settings_;
  ::std::string* app_launch_ordinal_;
  ::std::string* page_ordinal_;
  int launch_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void SYNC_EXPORT protobuf_AddDesc_app_5fspecifics_2eproto_impl();
  #else
  friend void SYNC_EXPORT protobuf_AddDesc_app_5fspecifics_2eproto();
  #endif
  friend void protobuf_AssignDesc_app_5fspecifics_2eproto();
  friend void protobuf_ShutdownFile_app_5fspecifics_2eproto();

  void InitAsDefaultInstance();
  static AppSpecifics* default_instance_;
};
// ===================================================================


// ===================================================================

// AppNotificationSettings

// optional bool initial_setup_done = 1;
inline bool AppNotificationSettings::has_initial_setup_done() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AppNotificationSettings::set_has_initial_setup_done() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AppNotificationSettings::clear_has_initial_setup_done() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AppNotificationSettings::clear_initial_setup_done() {
  initial_setup_done_ = false;
  clear_has_initial_setup_done();
}
inline bool AppNotificationSettings::initial_setup_done() const {
  return initial_setup_done_;
}
inline void AppNotificationSettings::set_initial_setup_done(bool value) {
  set_has_initial_setup_done();
  initial_setup_done_ = value;
}

// optional bool disabled = 2;
inline bool AppNotificationSettings::has_disabled() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AppNotificationSettings::set_has_disabled() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AppNotificationSettings::clear_has_disabled() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AppNotificationSettings::clear_disabled() {
  disabled_ = false;
  clear_has_disabled();
}
inline bool AppNotificationSettings::disabled() const {
  return disabled_;
}
inline void AppNotificationSettings::set_disabled(bool value) {
  set_has_disabled();
  disabled_ = value;
}

// optional string oauth_client_id = 3;
inline bool AppNotificationSettings::has_oauth_client_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AppNotificationSettings::set_has_oauth_client_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AppNotificationSettings::clear_has_oauth_client_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AppNotificationSettings::clear_oauth_client_id() {
  if (oauth_client_id_ != &::google::protobuf::internal::GetEmptyString()) {
    oauth_client_id_->clear();
  }
  clear_has_oauth_client_id();
}
inline const ::std::string& AppNotificationSettings::oauth_client_id() const {
  return *oauth_client_id_;
}
inline void AppNotificationSettings::set_oauth_client_id(const ::std::string& value) {
  set_has_oauth_client_id();
  if (oauth_client_id_ == &::google::protobuf::internal::GetEmptyString()) {
    oauth_client_id_ = new ::std::string;
  }
  oauth_client_id_->assign(value);
}
inline void AppNotificationSettings::set_oauth_client_id(const char* value) {
  set_has_oauth_client_id();
  if (oauth_client_id_ == &::google::protobuf::internal::GetEmptyString()) {
    oauth_client_id_ = new ::std::string;
  }
  oauth_client_id_->assign(value);
}
inline void AppNotificationSettings::set_oauth_client_id(const char* value, size_t size) {
  set_has_oauth_client_id();
  if (oauth_client_id_ == &::google::protobuf::internal::GetEmptyString()) {
    oauth_client_id_ = new ::std::string;
  }
  oauth_client_id_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AppNotificationSettings::mutable_oauth_client_id() {
  set_has_oauth_client_id();
  if (oauth_client_id_ == &::google::protobuf::internal::GetEmptyString()) {
    oauth_client_id_ = new ::std::string;
  }
  return oauth_client_id_;
}
inline ::std::string* AppNotificationSettings::release_oauth_client_id() {
  clear_has_oauth_client_id();
  if (oauth_client_id_ == &::google::protobuf::internal::GetEmptyString()) {
    return NULL;
  } else {
    ::std::string* temp = oauth_client_id_;
    oauth_client_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyString());
    return temp;
  }
}
inline void AppNotificationSettings::set_allocated_oauth_client_id(::std::string* oauth_client_id) {
  if (oauth_client_id_ != &::google::protobuf::internal::GetEmptyString()) {
    delete oauth_client_id_;
  }
  if (oauth_client_id) {
    set_has_oauth_client_id();
    oauth_client_id_ = oauth_client_id;
  } else {
    clear_has_oauth_client_id();
    oauth_client_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyString());
  }
}

// -------------------------------------------------------------------

// AppSpecifics

// optional .sync_pb.ExtensionSpecifics extension = 1;
inline bool AppSpecifics::has_extension() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AppSpecifics::set_has_extension() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AppSpecifics::clear_has_extension() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AppSpecifics::clear_extension() {
  if (extension_ != NULL) extension_->::sync_pb::ExtensionSpecifics::Clear();
  clear_has_extension();
}
inline const ::sync_pb::ExtensionSpecifics& AppSpecifics::extension() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return extension_ != NULL ? *extension_ : *default_instance().extension_;
#else
  return extension_ != NULL ? *extension_ : *default_instance_->extension_;
#endif
}
inline ::sync_pb::ExtensionSpecifics* AppSpecifics::mutable_extension() {
  set_has_extension();
  if (extension_ == NULL) extension_ = new ::sync_pb::ExtensionSpecifics;
  return extension_;
}
inline ::sync_pb::ExtensionSpecifics* AppSpecifics::release_extension() {
  clear_has_extension();
  ::sync_pb::ExtensionSpecifics* temp = extension_;
  extension_ = NULL;
  return temp;
}
inline void AppSpecifics::set_allocated_extension(::sync_pb::ExtensionSpecifics* extension) {
  delete extension_;
  extension_ = extension;
  if (extension) {
    set_has_extension();
  } else {
    clear_has_extension();
  }
}

// optional .sync_pb.AppNotificationSettings notification_settings = 2;
inline bool AppSpecifics::has_notification_settings() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AppSpecifics::set_has_notification_settings() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AppSpecifics::clear_has_notification_settings() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AppSpecifics::clear_notification_settings() {
  if (notification_settings_ != NULL) notification_settings_->::sync_pb::AppNotificationSettings::Clear();
  clear_has_notification_settings();
}
inline const ::sync_pb::AppNotificationSettings& AppSpecifics::notification_settings() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return notification_settings_ != NULL ? *notification_settings_ : *default_instance().notification_settings_;
#else
  return notification_settings_ != NULL ? *notification_settings_ : *default_instance_->notification_settings_;
#endif
}
inline ::sync_pb::AppNotificationSettings* AppSpecifics::mutable_notification_settings() {
  set_has_notification_settings();
  if (notification_settings_ == NULL) notification_settings_ = new ::sync_pb::AppNotificationSettings;
  return notification_settings_;
}
inline ::sync_pb::AppNotificationSettings* AppSpecifics::release_notification_settings() {
  clear_has_notification_settings();
  ::sync_pb::AppNotificationSettings* temp = notification_settings_;
  notification_settings_ = NULL;
  return temp;
}
inline void AppSpecifics::set_allocated_notification_settings(::sync_pb::AppNotificationSettings* notification_settings) {
  delete notification_settings_;
  notification_settings_ = notification_settings;
  if (notification_settings) {
    set_has_notification_settings();
  } else {
    clear_has_notification_settings();
  }
}

// optional string app_launch_ordinal = 3;
inline bool AppSpecifics::has_app_launch_ordinal() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AppSpecifics::set_has_app_launch_ordinal() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AppSpecifics::clear_has_app_launch_ordinal() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AppSpecifics::clear_app_launch_ordinal() {
  if (app_launch_ordinal_ != &::google::protobuf::internal::GetEmptyString()) {
    app_launch_ordinal_->clear();
  }
  clear_has_app_launch_ordinal();
}
inline const ::std::string& AppSpecifics::app_launch_ordinal() const {
  return *app_launch_ordinal_;
}
inline void AppSpecifics::set_app_launch_ordinal(const ::std::string& value) {
  set_has_app_launch_ordinal();
  if (app_launch_ordinal_ == &::google::protobuf::internal::GetEmptyString()) {
    app_launch_ordinal_ = new ::std::string;
  }
  app_launch_ordinal_->assign(value);
}
inline void AppSpecifics::set_app_launch_ordinal(const char* value) {
  set_has_app_launch_ordinal();
  if (app_launch_ordinal_ == &::google::protobuf::internal::GetEmptyString()) {
    app_launch_ordinal_ = new ::std::string;
  }
  app_launch_ordinal_->assign(value);
}
inline void AppSpecifics::set_app_launch_ordinal(const char* value, size_t size) {
  set_has_app_launch_ordinal();
  if (app_launch_ordinal_ == &::google::protobuf::internal::GetEmptyString()) {
    app_launch_ordinal_ = new ::std::string;
  }
  app_launch_ordinal_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AppSpecifics::mutable_app_launch_ordinal() {
  set_has_app_launch_ordinal();
  if (app_launch_ordinal_ == &::google::protobuf::internal::GetEmptyString()) {
    app_launch_ordinal_ = new ::std::string;
  }
  return app_launch_ordinal_;
}
inline ::std::string* AppSpecifics::release_app_launch_ordinal() {
  clear_has_app_launch_ordinal();
  if (app_launch_ordinal_ == &::google::protobuf::internal::GetEmptyString()) {
    return NULL;
  } else {
    ::std::string* temp = app_launch_ordinal_;
    app_launch_ordinal_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyString());
    return temp;
  }
}
inline void AppSpecifics::set_allocated_app_launch_ordinal(::std::string* app_launch_ordinal) {
  if (app_launch_ordinal_ != &::google::protobuf::internal::GetEmptyString()) {
    delete app_launch_ordinal_;
  }
  if (app_launch_ordinal) {
    set_has_app_launch_ordinal();
    app_launch_ordinal_ = app_launch_ordinal;
  } else {
    clear_has_app_launch_ordinal();
    app_launch_ordinal_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyString());
  }
}

// optional string page_ordinal = 4;
inline bool AppSpecifics::has_page_ordinal() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AppSpecifics::set_has_page_ordinal() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AppSpecifics::clear_has_page_ordinal() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AppSpecifics::clear_page_ordinal() {
  if (page_ordinal_ != &::google::protobuf::internal::GetEmptyString()) {
    page_ordinal_->clear();
  }
  clear_has_page_ordinal();
}
inline const ::std::string& AppSpecifics::page_ordinal() const {
  return *page_ordinal_;
}
inline void AppSpecifics::set_page_ordinal(const ::std::string& value) {
  set_has_page_ordinal();
  if (page_ordinal_ == &::google::protobuf::internal::GetEmptyString()) {
    page_ordinal_ = new ::std::string;
  }
  page_ordinal_->assign(value);
}
inline void AppSpecifics::set_page_ordinal(const char* value) {
  set_has_page_ordinal();
  if (page_ordinal_ == &::google::protobuf::internal::GetEmptyString()) {
    page_ordinal_ = new ::std::string;
  }
  page_ordinal_->assign(value);
}
inline void AppSpecifics::set_page_ordinal(const char* value, size_t size) {
  set_has_page_ordinal();
  if (page_ordinal_ == &::google::protobuf::internal::GetEmptyString()) {
    page_ordinal_ = new ::std::string;
  }
  page_ordinal_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AppSpecifics::mutable_page_ordinal() {
  set_has_page_ordinal();
  if (page_ordinal_ == &::google::protobuf::internal::GetEmptyString()) {
    page_ordinal_ = new ::std::string;
  }
  return page_ordinal_;
}
inline ::std::string* AppSpecifics::release_page_ordinal() {
  clear_has_page_ordinal();
  if (page_ordinal_ == &::google::protobuf::internal::GetEmptyString()) {
    return NULL;
  } else {
    ::std::string* temp = page_ordinal_;
    page_ordinal_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyString());
    return temp;
  }
}
inline void AppSpecifics::set_allocated_page_ordinal(::std::string* page_ordinal) {
  if (page_ordinal_ != &::google::protobuf::internal::GetEmptyString()) {
    delete page_ordinal_;
  }
  if (page_ordinal) {
    set_has_page_ordinal();
    page_ordinal_ = page_ordinal;
  } else {
    clear_has_page_ordinal();
    page_ordinal_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyString());
  }
}

// optional .sync_pb.AppSpecifics.LaunchType launch_type = 5;
inline bool AppSpecifics::has_launch_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AppSpecifics::set_has_launch_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AppSpecifics::clear_has_launch_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AppSpecifics::clear_launch_type() {
  launch_type_ = 0;
  clear_has_launch_type();
}
inline ::sync_pb::AppSpecifics_LaunchType AppSpecifics::launch_type() const {
  return static_cast< ::sync_pb::AppSpecifics_LaunchType >(launch_type_);
}
inline void AppSpecifics::set_launch_type(::sync_pb::AppSpecifics_LaunchType value) {
  assert(::sync_pb::AppSpecifics_LaunchType_IsValid(value));
  set_has_launch_type();
  launch_type_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace sync_pb

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_app_5fspecifics_2eproto__INCLUDED
