// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: history_delete_directive_specifics.proto

#ifndef PROTOBUF_history_5fdelete_5fdirective_5fspecifics_2eproto__INCLUDED
#define PROTOBUF_history_5fdelete_5fdirective_5fspecifics_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include "sync/base/sync_export.h"

namespace sync_pb {

// Internal implementation detail -- do not call these.
void SYNC_EXPORT protobuf_AddDesc_history_5fdelete_5fdirective_5fspecifics_2eproto();
void protobuf_AssignDesc_history_5fdelete_5fdirective_5fspecifics_2eproto();
void protobuf_ShutdownFile_history_5fdelete_5fdirective_5fspecifics_2eproto();

class HistoryDeleteDirectiveSpecifics;
class GlobalIdDirective;
class TimeRangeDirective;

// ===================================================================

class SYNC_EXPORT HistoryDeleteDirectiveSpecifics : public ::google::protobuf::MessageLite {
 public:
  HistoryDeleteDirectiveSpecifics();
  virtual ~HistoryDeleteDirectiveSpecifics();

  HistoryDeleteDirectiveSpecifics(const HistoryDeleteDirectiveSpecifics& from);

  inline HistoryDeleteDirectiveSpecifics& operator=(const HistoryDeleteDirectiveSpecifics& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const HistoryDeleteDirectiveSpecifics& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const HistoryDeleteDirectiveSpecifics* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(HistoryDeleteDirectiveSpecifics* other);

  // implements Message ----------------------------------------------

  HistoryDeleteDirectiveSpecifics* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const HistoryDeleteDirectiveSpecifics& from);
  void MergeFrom(const HistoryDeleteDirectiveSpecifics& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .sync_pb.GlobalIdDirective global_id_directive = 1;
  inline bool has_global_id_directive() const;
  inline void clear_global_id_directive();
  static const int kGlobalIdDirectiveFieldNumber = 1;
  inline const ::sync_pb::GlobalIdDirective& global_id_directive() const;
  inline ::sync_pb::GlobalIdDirective* mutable_global_id_directive();
  inline ::sync_pb::GlobalIdDirective* release_global_id_directive();
  inline void set_allocated_global_id_directive(::sync_pb::GlobalIdDirective* global_id_directive);

  // optional .sync_pb.TimeRangeDirective time_range_directive = 2;
  inline bool has_time_range_directive() const;
  inline void clear_time_range_directive();
  static const int kTimeRangeDirectiveFieldNumber = 2;
  inline const ::sync_pb::TimeRangeDirective& time_range_directive() const;
  inline ::sync_pb::TimeRangeDirective* mutable_time_range_directive();
  inline ::sync_pb::TimeRangeDirective* release_time_range_directive();
  inline void set_allocated_time_range_directive(::sync_pb::TimeRangeDirective* time_range_directive);

  // @@protoc_insertion_point(class_scope:sync_pb.HistoryDeleteDirectiveSpecifics)
 private:
  inline void set_has_global_id_directive();
  inline void clear_has_global_id_directive();
  inline void set_has_time_range_directive();
  inline void clear_has_time_range_directive();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::sync_pb::GlobalIdDirective* global_id_directive_;
  ::sync_pb::TimeRangeDirective* time_range_directive_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void SYNC_EXPORT protobuf_AddDesc_history_5fdelete_5fdirective_5fspecifics_2eproto_impl();
  #else
  friend void SYNC_EXPORT protobuf_AddDesc_history_5fdelete_5fdirective_5fspecifics_2eproto();
  #endif
  friend void protobuf_AssignDesc_history_5fdelete_5fdirective_5fspecifics_2eproto();
  friend void protobuf_ShutdownFile_history_5fdelete_5fdirective_5fspecifics_2eproto();

  void InitAsDefaultInstance();
  static HistoryDeleteDirectiveSpecifics* default_instance_;
};
// -------------------------------------------------------------------

class SYNC_EXPORT GlobalIdDirective : public ::google::protobuf::MessageLite {
 public:
  GlobalIdDirective();
  virtual ~GlobalIdDirective();

  GlobalIdDirective(const GlobalIdDirective& from);

  inline GlobalIdDirective& operator=(const GlobalIdDirective& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const GlobalIdDirective& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const GlobalIdDirective* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(GlobalIdDirective* other);

  // implements Message ----------------------------------------------

  GlobalIdDirective* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const GlobalIdDirective& from);
  void MergeFrom(const GlobalIdDirective& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int64 global_id = 1;
  inline int global_id_size() const;
  inline void clear_global_id();
  static const int kGlobalIdFieldNumber = 1;
  inline ::google::protobuf::int64 global_id(int index) const;
  inline void set_global_id(int index, ::google::protobuf::int64 value);
  inline void add_global_id(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      global_id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_global_id();

  // optional int64 start_time_usec = 2;
  inline bool has_start_time_usec() const;
  inline void clear_start_time_usec();
  static const int kStartTimeUsecFieldNumber = 2;
  inline ::google::protobuf::int64 start_time_usec() const;
  inline void set_start_time_usec(::google::protobuf::int64 value);

  // optional int64 end_time_usec = 3;
  inline bool has_end_time_usec() const;
  inline void clear_end_time_usec();
  static const int kEndTimeUsecFieldNumber = 3;
  inline ::google::protobuf::int64 end_time_usec() const;
  inline void set_end_time_usec(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:sync_pb.GlobalIdDirective)
 private:
  inline void set_has_start_time_usec();
  inline void clear_has_start_time_usec();
  inline void set_has_end_time_usec();
  inline void clear_has_end_time_usec();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > global_id_;
  ::google::protobuf::int64 start_time_usec_;
  ::google::protobuf::int64 end_time_usec_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void SYNC_EXPORT protobuf_AddDesc_history_5fdelete_5fdirective_5fspecifics_2eproto_impl();
  #else
  friend void SYNC_EXPORT protobuf_AddDesc_history_5fdelete_5fdirective_5fspecifics_2eproto();
  #endif
  friend void protobuf_AssignDesc_history_5fdelete_5fdirective_5fspecifics_2eproto();
  friend void protobuf_ShutdownFile_history_5fdelete_5fdirective_5fspecifics_2eproto();

  void InitAsDefaultInstance();
  static GlobalIdDirective* default_instance_;
};
// -------------------------------------------------------------------

class SYNC_EXPORT TimeRangeDirective : public ::google::protobuf::MessageLite {
 public:
  TimeRangeDirective();
  virtual ~TimeRangeDirective();

  TimeRangeDirective(const TimeRangeDirective& from);

  inline TimeRangeDirective& operator=(const TimeRangeDirective& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const TimeRangeDirective& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const TimeRangeDirective* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(TimeRangeDirective* other);

  // implements Message ----------------------------------------------

  TimeRangeDirective* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const TimeRangeDirective& from);
  void MergeFrom(const TimeRangeDirective& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 start_time_usec = 1;
  inline bool has_start_time_usec() const;
  inline void clear_start_time_usec();
  static const int kStartTimeUsecFieldNumber = 1;
  inline ::google::protobuf::int64 start_time_usec() const;
  inline void set_start_time_usec(::google::protobuf::int64 value);

  // optional int64 end_time_usec = 2;
  inline bool has_end_time_usec() const;
  inline void clear_end_time_usec();
  static const int kEndTimeUsecFieldNumber = 2;
  inline ::google::protobuf::int64 end_time_usec() const;
  inline void set_end_time_usec(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:sync_pb.TimeRangeDirective)
 private:
  inline void set_has_start_time_usec();
  inline void clear_has_start_time_usec();
  inline void set_has_end_time_usec();
  inline void clear_has_end_time_usec();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 start_time_usec_;
  ::google::protobuf::int64 end_time_usec_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void SYNC_EXPORT protobuf_AddDesc_history_5fdelete_5fdirective_5fspecifics_2eproto_impl();
  #else
  friend void SYNC_EXPORT protobuf_AddDesc_history_5fdelete_5fdirective_5fspecifics_2eproto();
  #endif
  friend void protobuf_AssignDesc_history_5fdelete_5fdirective_5fspecifics_2eproto();
  friend void protobuf_ShutdownFile_history_5fdelete_5fdirective_5fspecifics_2eproto();

  void InitAsDefaultInstance();
  static TimeRangeDirective* default_instance_;
};
// ===================================================================


// ===================================================================

// HistoryDeleteDirectiveSpecifics

// optional .sync_pb.GlobalIdDirective global_id_directive = 1;
inline bool HistoryDeleteDirectiveSpecifics::has_global_id_directive() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HistoryDeleteDirectiveSpecifics::set_has_global_id_directive() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HistoryDeleteDirectiveSpecifics::clear_has_global_id_directive() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HistoryDeleteDirectiveSpecifics::clear_global_id_directive() {
  if (global_id_directive_ != NULL) global_id_directive_->::sync_pb::GlobalIdDirective::Clear();
  clear_has_global_id_directive();
}
inline const ::sync_pb::GlobalIdDirective& HistoryDeleteDirectiveSpecifics::global_id_directive() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return global_id_directive_ != NULL ? *global_id_directive_ : *default_instance().global_id_directive_;
#else
  return global_id_directive_ != NULL ? *global_id_directive_ : *default_instance_->global_id_directive_;
#endif
}
inline ::sync_pb::GlobalIdDirective* HistoryDeleteDirectiveSpecifics::mutable_global_id_directive() {
  set_has_global_id_directive();
  if (global_id_directive_ == NULL) global_id_directive_ = new ::sync_pb::GlobalIdDirective;
  return global_id_directive_;
}
inline ::sync_pb::GlobalIdDirective* HistoryDeleteDirectiveSpecifics::release_global_id_directive() {
  clear_has_global_id_directive();
  ::sync_pb::GlobalIdDirective* temp = global_id_directive_;
  global_id_directive_ = NULL;
  return temp;
}
inline void HistoryDeleteDirectiveSpecifics::set_allocated_global_id_directive(::sync_pb::GlobalIdDirective* global_id_directive) {
  delete global_id_directive_;
  global_id_directive_ = global_id_directive;
  if (global_id_directive) {
    set_has_global_id_directive();
  } else {
    clear_has_global_id_directive();
  }
}

// optional .sync_pb.TimeRangeDirective time_range_directive = 2;
inline bool HistoryDeleteDirectiveSpecifics::has_time_range_directive() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HistoryDeleteDirectiveSpecifics::set_has_time_range_directive() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HistoryDeleteDirectiveSpecifics::clear_has_time_range_directive() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HistoryDeleteDirectiveSpecifics::clear_time_range_directive() {
  if (time_range_directive_ != NULL) time_range_directive_->::sync_pb::TimeRangeDirective::Clear();
  clear_has_time_range_directive();
}
inline const ::sync_pb::TimeRangeDirective& HistoryDeleteDirectiveSpecifics::time_range_directive() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return time_range_directive_ != NULL ? *time_range_directive_ : *default_instance().time_range_directive_;
#else
  return time_range_directive_ != NULL ? *time_range_directive_ : *default_instance_->time_range_directive_;
#endif
}
inline ::sync_pb::TimeRangeDirective* HistoryDeleteDirectiveSpecifics::mutable_time_range_directive() {
  set_has_time_range_directive();
  if (time_range_directive_ == NULL) time_range_directive_ = new ::sync_pb::TimeRangeDirective;
  return time_range_directive_;
}
inline ::sync_pb::TimeRangeDirective* HistoryDeleteDirectiveSpecifics::release_time_range_directive() {
  clear_has_time_range_directive();
  ::sync_pb::TimeRangeDirective* temp = time_range_directive_;
  time_range_directive_ = NULL;
  return temp;
}
inline void HistoryDeleteDirectiveSpecifics::set_allocated_time_range_directive(::sync_pb::TimeRangeDirective* time_range_directive) {
  delete time_range_directive_;
  time_range_directive_ = time_range_directive;
  if (time_range_directive) {
    set_has_time_range_directive();
  } else {
    clear_has_time_range_directive();
  }
}

// -------------------------------------------------------------------

// GlobalIdDirective

// repeated int64 global_id = 1;
inline int GlobalIdDirective::global_id_size() const {
  return global_id_.size();
}
inline void GlobalIdDirective::clear_global_id() {
  global_id_.Clear();
}
inline ::google::protobuf::int64 GlobalIdDirective::global_id(int index) const {
  return global_id_.Get(index);
}
inline void GlobalIdDirective::set_global_id(int index, ::google::protobuf::int64 value) {
  global_id_.Set(index, value);
}
inline void GlobalIdDirective::add_global_id(::google::protobuf::int64 value) {
  global_id_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
GlobalIdDirective::global_id() const {
  return global_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
GlobalIdDirective::mutable_global_id() {
  return &global_id_;
}

// optional int64 start_time_usec = 2;
inline bool GlobalIdDirective::has_start_time_usec() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GlobalIdDirective::set_has_start_time_usec() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GlobalIdDirective::clear_has_start_time_usec() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GlobalIdDirective::clear_start_time_usec() {
  start_time_usec_ = GOOGLE_LONGLONG(0);
  clear_has_start_time_usec();
}
inline ::google::protobuf::int64 GlobalIdDirective::start_time_usec() const {
  return start_time_usec_;
}
inline void GlobalIdDirective::set_start_time_usec(::google::protobuf::int64 value) {
  set_has_start_time_usec();
  start_time_usec_ = value;
}

// optional int64 end_time_usec = 3;
inline bool GlobalIdDirective::has_end_time_usec() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GlobalIdDirective::set_has_end_time_usec() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GlobalIdDirective::clear_has_end_time_usec() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GlobalIdDirective::clear_end_time_usec() {
  end_time_usec_ = GOOGLE_LONGLONG(0);
  clear_has_end_time_usec();
}
inline ::google::protobuf::int64 GlobalIdDirective::end_time_usec() const {
  return end_time_usec_;
}
inline void GlobalIdDirective::set_end_time_usec(::google::protobuf::int64 value) {
  set_has_end_time_usec();
  end_time_usec_ = value;
}

// -------------------------------------------------------------------

// TimeRangeDirective

// optional int64 start_time_usec = 1;
inline bool TimeRangeDirective::has_start_time_usec() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TimeRangeDirective::set_has_start_time_usec() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TimeRangeDirective::clear_has_start_time_usec() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TimeRangeDirective::clear_start_time_usec() {
  start_time_usec_ = GOOGLE_LONGLONG(0);
  clear_has_start_time_usec();
}
inline ::google::protobuf::int64 TimeRangeDirective::start_time_usec() const {
  return start_time_usec_;
}
inline void TimeRangeDirective::set_start_time_usec(::google::protobuf::int64 value) {
  set_has_start_time_usec();
  start_time_usec_ = value;
}

// optional int64 end_time_usec = 2;
inline bool TimeRangeDirective::has_end_time_usec() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TimeRangeDirective::set_has_end_time_usec() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TimeRangeDirective::clear_has_end_time_usec() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TimeRangeDirective::clear_end_time_usec() {
  end_time_usec_ = GOOGLE_LONGLONG(0);
  clear_has_end_time_usec();
}
inline ::google::protobuf::int64 TimeRangeDirective::end_time_usec() const {
  return end_time_usec_;
}
inline void TimeRangeDirective::set_end_time_usec(::google::protobuf::int64 value) {
  set_has_end_time_usec();
  end_time_usec_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace sync_pb

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_history_5fdelete_5fdirective_5fspecifics_2eproto__INCLUDED
